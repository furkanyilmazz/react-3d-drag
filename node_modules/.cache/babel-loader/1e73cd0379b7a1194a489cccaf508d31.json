{"ast":null,"code":"// Returns a Float32Array representing the bounds data for box.\nexport function boxToArray(bx) {\n  var arr = new Float32Array(6);\n  arr[0] = bx.min.x;\n  arr[1] = bx.min.y;\n  arr[2] = bx.min.z;\n  arr[3] = bx.max.x;\n  arr[4] = bx.max.y;\n  arr[5] = bx.max.z;\n  return arr;\n}\nexport function arrayToBox(arr, target) {\n  target.min.x = arr[0];\n  target.min.y = arr[1];\n  target.min.z = arr[2];\n  target.max.x = arr[3];\n  target.max.y = arr[4];\n  target.max.z = arr[5];\n  return target;\n}\nexport function getLongestEdgeIndex(bounds) {\n  var splitDimIdx = -1;\n  var splitDist = -Infinity;\n\n  for (var i = 0; i < 3; i++) {\n    var dist = bounds[i + 3] - bounds[i];\n\n    if (dist > splitDist) {\n      splitDist = dist;\n      splitDimIdx = i;\n    }\n  }\n\n  return splitDimIdx;\n}","map":{"version":3,"sources":["/Users/a2017/Documents/GitHub/react-3d-drag/node_modules/three-mesh-bvh/src/Utils/ArrayBoxUtilities.js"],"names":["boxToArray","bx","arr","Float32Array","min","x","y","z","max","arrayToBox","target","getLongestEdgeIndex","bounds","splitDimIdx","splitDist","Infinity","i","dist"],"mappings":"AAAA;AACA,OAAO,SAASA,UAAT,CAAqBC,EAArB,EAA0B;AAEhC,MAAMC,GAAG,GAAG,IAAIC,YAAJ,CAAkB,CAAlB,CAAZ;AAEAD,EAAAA,GAAG,CAAE,CAAF,CAAH,GAAWD,EAAE,CAACG,GAAH,CAAOC,CAAlB;AACAH,EAAAA,GAAG,CAAE,CAAF,CAAH,GAAWD,EAAE,CAACG,GAAH,CAAOE,CAAlB;AACAJ,EAAAA,GAAG,CAAE,CAAF,CAAH,GAAWD,EAAE,CAACG,GAAH,CAAOG,CAAlB;AAEAL,EAAAA,GAAG,CAAE,CAAF,CAAH,GAAWD,EAAE,CAACO,GAAH,CAAOH,CAAlB;AACAH,EAAAA,GAAG,CAAE,CAAF,CAAH,GAAWD,EAAE,CAACO,GAAH,CAAOF,CAAlB;AACAJ,EAAAA,GAAG,CAAE,CAAF,CAAH,GAAWD,EAAE,CAACO,GAAH,CAAOD,CAAlB;AAEA,SAAOL,GAAP;AAEA;AAED,OAAO,SAASO,UAAT,CAAqBP,GAArB,EAA0BQ,MAA1B,EAAmC;AAEzCA,EAAAA,MAAM,CAACN,GAAP,CAAWC,CAAX,GAAeH,GAAG,CAAE,CAAF,CAAlB;AACAQ,EAAAA,MAAM,CAACN,GAAP,CAAWE,CAAX,GAAeJ,GAAG,CAAE,CAAF,CAAlB;AACAQ,EAAAA,MAAM,CAACN,GAAP,CAAWG,CAAX,GAAeL,GAAG,CAAE,CAAF,CAAlB;AAEAQ,EAAAA,MAAM,CAACF,GAAP,CAAWH,CAAX,GAAeH,GAAG,CAAE,CAAF,CAAlB;AACAQ,EAAAA,MAAM,CAACF,GAAP,CAAWF,CAAX,GAAeJ,GAAG,CAAE,CAAF,CAAlB;AACAQ,EAAAA,MAAM,CAACF,GAAP,CAAWD,CAAX,GAAeL,GAAG,CAAE,CAAF,CAAlB;AAEA,SAAOQ,MAAP;AAEA;AAED,OAAO,SAASC,mBAAT,CAA8BC,MAA9B,EAAuC;AAE7C,MAAIC,WAAW,GAAG,CAAE,CAApB;AACA,MAAIC,SAAS,GAAG,CAAEC,QAAlB;;AAEA,OAAM,IAAIC,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG,CAArB,EAAwBA,CAAC,EAAzB,EAA+B;AAE9B,QAAMC,IAAI,GAAGL,MAAM,CAAEI,CAAC,GAAG,CAAN,CAAN,GAAkBJ,MAAM,CAAEI,CAAF,CAArC;;AACA,QAAKC,IAAI,GAAGH,SAAZ,EAAwB;AAEvBA,MAAAA,SAAS,GAAGG,IAAZ;AACAJ,MAAAA,WAAW,GAAGG,CAAd;AAEA;AAED;;AAED,SAAOH,WAAP;AAEA","sourcesContent":["// Returns a Float32Array representing the bounds data for box.\r\nexport function boxToArray( bx ) {\r\n\r\n\tconst arr = new Float32Array( 6 );\r\n\r\n\tarr[ 0 ] = bx.min.x;\r\n\tarr[ 1 ] = bx.min.y;\r\n\tarr[ 2 ] = bx.min.z;\r\n\r\n\tarr[ 3 ] = bx.max.x;\r\n\tarr[ 4 ] = bx.max.y;\r\n\tarr[ 5 ] = bx.max.z;\r\n\r\n\treturn arr;\r\n\r\n}\r\n\r\nexport function arrayToBox( arr, target ) {\r\n\r\n\ttarget.min.x = arr[ 0 ];\r\n\ttarget.min.y = arr[ 1 ];\r\n\ttarget.min.z = arr[ 2 ];\r\n\r\n\ttarget.max.x = arr[ 3 ];\r\n\ttarget.max.y = arr[ 4 ];\r\n\ttarget.max.z = arr[ 5 ];\r\n\r\n\treturn target;\r\n\r\n}\r\n\r\nexport function getLongestEdgeIndex( bounds ) {\r\n\r\n\tlet splitDimIdx = - 1;\r\n\tlet splitDist = - Infinity;\r\n\r\n\tfor ( let i = 0; i < 3; i ++ ) {\r\n\r\n\t\tconst dist = bounds[ i + 3 ] - bounds[ i ];\r\n\t\tif ( dist > splitDist ) {\r\n\r\n\t\t\tsplitDist = dist;\r\n\t\t\tsplitDimIdx = i;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn splitDimIdx;\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}