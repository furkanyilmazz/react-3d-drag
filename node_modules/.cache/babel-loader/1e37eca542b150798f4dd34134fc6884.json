{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useGizmoContext } from './GizmoHelper.js';\nimport { Vector3, CanvasTexture } from 'three';\nconst colors = {\n  bg: '#f0f0f0',\n  hover: '#999',\n  text: 'black',\n  stroke: 'black'\n};\nconst defaultFaces = ['Right', 'Left', 'Top', 'Bottom', 'Front', 'Back'];\n\nconst makePositionVector = xyz => new Vector3(...xyz).multiplyScalar(0.38);\n\nconst corners = [[1, 1, 1], [1, 1, -1], [1, -1, 1], [1, -1, -1], [-1, 1, 1], [-1, 1, -1], [-1, -1, 1], [-1, -1, -1]].map(makePositionVector);\nconst cornerDimensions = [0.25, 0.25, 0.25];\nconst edges = [[1, 1, 0], [1, 0, 1], [1, 0, -1], [1, -1, 0], [0, 1, 1], [0, 1, -1], [0, -1, 1], [0, -1, -1], [-1, 1, 0], [-1, 0, 1], [-1, 0, -1], [-1, -1, 0]].map(makePositionVector);\nconst edgeDimensions = edges.map(edge => edge.toArray().map(axis => axis == 0 ? 0.5 : 0.25));\n\nconst FaceMaterial = ({\n  hover,\n  index,\n  font = '20px Inter var, Arial, sans-serif',\n  faces = defaultFaces,\n  color = colors.bg,\n  hoverColor = colors.hover,\n  textColor = colors.text,\n  strokeColor = colors.stroke,\n  opacity = 1\n}) => {\n  const texture = React.useMemo(() => {\n    const canvas = document.createElement('canvas');\n    canvas.width = 128;\n    canvas.height = 128;\n    const context = canvas.getContext('2d');\n    context.fillStyle = color;\n    context.fillRect(0, 0, canvas.width, canvas.height);\n    context.strokeStyle = strokeColor;\n    context.strokeRect(0, 0, canvas.width, canvas.height);\n    context.font = font;\n    context.textAlign = 'center';\n    context.fillStyle = textColor;\n    context.fillText(faces[index].toUpperCase(), 64, 76);\n    return new CanvasTexture(canvas);\n  }, [index, font, color, textColor, strokeColor]);\n  return /*#__PURE__*/React.createElement(\"meshLambertMaterial\", {\n    map: texture,\n    attachArray: \"material\",\n    color: hover ? hoverColor : 'white',\n    transparent: true,\n    opacity: opacity\n  });\n};\n\nconst FaceCube = props => {\n  const {\n    tweenCamera,\n    raycast\n  } = useGizmoContext();\n  const [hover, setHover] = React.useState(null);\n\n  const handlePointerOut = e => {\n    e.stopPropagation();\n    setHover(null);\n  };\n\n  const handlePointerDown = e => {\n    e.stopPropagation();\n    tweenCamera(e.face.normal);\n  };\n\n  const handlePointerMove = e => {\n    e.stopPropagation();\n    setHover(Math.floor(e.faceIndex / 2));\n  };\n\n  return /*#__PURE__*/React.createElement(\"mesh\", {\n    raycast: raycast,\n    onPointerOut: handlePointerOut,\n    onPointerMove: handlePointerMove,\n    onPointerDown: props.onClick || handlePointerDown\n  }, [...Array(6)].map((_, index) => /*#__PURE__*/React.createElement(FaceMaterial, _extends({\n    key: index,\n    index: index,\n    hover: hover === index\n  }, props))), /*#__PURE__*/React.createElement(\"boxGeometry\", null));\n};\n\nconst EdgeCube = ({\n  onClick,\n  dimensions,\n  position,\n  hoverColor = colors.hover\n}) => {\n  const {\n    tweenCamera,\n    raycast\n  } = useGizmoContext();\n  const [hover, setHover] = React.useState(false);\n\n  const handlePointerOut = e => {\n    e.stopPropagation();\n    setHover(false);\n  };\n\n  const handlePointerOver = e => {\n    e.stopPropagation();\n    setHover(true);\n  };\n\n  const handlePointerDown = e => {\n    e.stopPropagation();\n    tweenCamera(position);\n  };\n\n  return /*#__PURE__*/React.createElement(\"mesh\", {\n    scale: 1.1,\n    position: position,\n    raycast: raycast,\n    onPointerOver: handlePointerOver,\n    onPointerOut: handlePointerOut,\n    onPointerDown: onClick || handlePointerDown\n  }, /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    color: hover ? hoverColor : 'white',\n    transparent: true,\n    opacity: 0.6,\n    visible: hover\n  }), /*#__PURE__*/React.createElement(\"boxGeometry\", {\n    args: dimensions\n  }));\n};\n\nconst GizmoViewcube = props => {\n  return /*#__PURE__*/React.createElement(\"group\", {\n    scale: [60, 60, 60]\n  }, /*#__PURE__*/React.createElement(FaceCube, props), edges.map((edge, index) => /*#__PURE__*/React.createElement(EdgeCube, _extends({\n    key: index,\n    position: edge,\n    dimensions: edgeDimensions[index]\n  }, props))), corners.map((corner, index) => /*#__PURE__*/React.createElement(EdgeCube, _extends({\n    key: index,\n    position: corner,\n    dimensions: cornerDimensions\n  }, props))), /*#__PURE__*/React.createElement(\"ambientLight\", {\n    intensity: 0.5\n  }), /*#__PURE__*/React.createElement(\"pointLight\", {\n    position: [10, 10, 10],\n    intensity: 0.5\n  }));\n};\n\nexport { GizmoViewcube };","map":{"version":3,"sources":["/Users/a2017/Documents/GitHub/react-3d-drag/node_modules/@react-three/drei/core/GizmoViewcube.js"],"names":["_extends","React","useGizmoContext","Vector3","CanvasTexture","colors","bg","hover","text","stroke","defaultFaces","makePositionVector","xyz","multiplyScalar","corners","map","cornerDimensions","edges","edgeDimensions","edge","toArray","axis","FaceMaterial","index","font","faces","color","hoverColor","textColor","strokeColor","opacity","texture","useMemo","canvas","document","createElement","width","height","context","getContext","fillStyle","fillRect","strokeStyle","strokeRect","textAlign","fillText","toUpperCase","attachArray","transparent","FaceCube","props","tweenCamera","raycast","setHover","useState","handlePointerOut","e","stopPropagation","handlePointerDown","face","normal","handlePointerMove","Math","floor","faceIndex","onPointerOut","onPointerMove","onPointerDown","onClick","Array","_","key","EdgeCube","dimensions","position","handlePointerOver","scale","onPointerOver","visible","args","GizmoViewcube","corner","intensity"],"mappings":"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","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useGizmoContext } from './GizmoHelper.js';\nimport { Vector3, CanvasTexture } from 'three';\n\nconst colors = {\n  bg: '#f0f0f0',\n  hover: '#999',\n  text: 'black',\n  stroke: 'black'\n};\nconst defaultFaces = ['Right', 'Left', 'Top', 'Bottom', 'Front', 'Back'];\n\nconst makePositionVector = xyz => new Vector3(...xyz).multiplyScalar(0.38);\n\nconst corners = [[1, 1, 1], [1, 1, -1], [1, -1, 1], [1, -1, -1], [-1, 1, 1], [-1, 1, -1], [-1, -1, 1], [-1, -1, -1]].map(makePositionVector);\nconst cornerDimensions = [0.25, 0.25, 0.25];\nconst edges = [[1, 1, 0], [1, 0, 1], [1, 0, -1], [1, -1, 0], [0, 1, 1], [0, 1, -1], [0, -1, 1], [0, -1, -1], [-1, 1, 0], [-1, 0, 1], [-1, 0, -1], [-1, -1, 0]].map(makePositionVector);\nconst edgeDimensions = edges.map(edge => edge.toArray().map(axis => axis == 0 ? 0.5 : 0.25));\n\nconst FaceMaterial = ({\n  hover,\n  index,\n  font = '20px Inter var, Arial, sans-serif',\n  faces = defaultFaces,\n  color = colors.bg,\n  hoverColor = colors.hover,\n  textColor = colors.text,\n  strokeColor = colors.stroke,\n  opacity = 1\n}) => {\n  const texture = React.useMemo(() => {\n    const canvas = document.createElement('canvas');\n    canvas.width = 128;\n    canvas.height = 128;\n    const context = canvas.getContext('2d');\n    context.fillStyle = color;\n    context.fillRect(0, 0, canvas.width, canvas.height);\n    context.strokeStyle = strokeColor;\n    context.strokeRect(0, 0, canvas.width, canvas.height);\n    context.font = font;\n    context.textAlign = 'center';\n    context.fillStyle = textColor;\n    context.fillText(faces[index].toUpperCase(), 64, 76);\n    return new CanvasTexture(canvas);\n  }, [index, font, color, textColor, strokeColor]);\n  return /*#__PURE__*/React.createElement(\"meshLambertMaterial\", {\n    map: texture,\n    attachArray: \"material\",\n    color: hover ? hoverColor : 'white',\n    transparent: true,\n    opacity: opacity\n  });\n};\n\nconst FaceCube = props => {\n  const {\n    tweenCamera,\n    raycast\n  } = useGizmoContext();\n  const [hover, setHover] = React.useState(null);\n\n  const handlePointerOut = e => {\n    e.stopPropagation();\n    setHover(null);\n  };\n\n  const handlePointerDown = e => {\n    e.stopPropagation();\n    tweenCamera(e.face.normal);\n  };\n\n  const handlePointerMove = e => {\n    e.stopPropagation();\n    setHover(Math.floor(e.faceIndex / 2));\n  };\n\n  return /*#__PURE__*/React.createElement(\"mesh\", {\n    raycast: raycast,\n    onPointerOut: handlePointerOut,\n    onPointerMove: handlePointerMove,\n    onPointerDown: props.onClick || handlePointerDown\n  }, [...Array(6)].map((_, index) => /*#__PURE__*/React.createElement(FaceMaterial, _extends({\n    key: index,\n    index: index,\n    hover: hover === index\n  }, props))), /*#__PURE__*/React.createElement(\"boxGeometry\", null));\n};\n\nconst EdgeCube = ({\n  onClick,\n  dimensions,\n  position,\n  hoverColor = colors.hover\n}) => {\n  const {\n    tweenCamera,\n    raycast\n  } = useGizmoContext();\n  const [hover, setHover] = React.useState(false);\n\n  const handlePointerOut = e => {\n    e.stopPropagation();\n    setHover(false);\n  };\n\n  const handlePointerOver = e => {\n    e.stopPropagation();\n    setHover(true);\n  };\n\n  const handlePointerDown = e => {\n    e.stopPropagation();\n    tweenCamera(position);\n  };\n\n  return /*#__PURE__*/React.createElement(\"mesh\", {\n    scale: 1.1,\n    position: position,\n    raycast: raycast,\n    onPointerOver: handlePointerOver,\n    onPointerOut: handlePointerOut,\n    onPointerDown: onClick || handlePointerDown\n  }, /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    color: hover ? hoverColor : 'white',\n    transparent: true,\n    opacity: 0.6,\n    visible: hover\n  }), /*#__PURE__*/React.createElement(\"boxGeometry\", {\n    args: dimensions\n  }));\n};\n\nconst GizmoViewcube = props => {\n  return /*#__PURE__*/React.createElement(\"group\", {\n    scale: [60, 60, 60]\n  }, /*#__PURE__*/React.createElement(FaceCube, props), edges.map((edge, index) => /*#__PURE__*/React.createElement(EdgeCube, _extends({\n    key: index,\n    position: edge,\n    dimensions: edgeDimensions[index]\n  }, props))), corners.map((corner, index) => /*#__PURE__*/React.createElement(EdgeCube, _extends({\n    key: index,\n    position: corner,\n    dimensions: cornerDimensions\n  }, props))), /*#__PURE__*/React.createElement(\"ambientLight\", {\n    intensity: 0.5\n  }), /*#__PURE__*/React.createElement(\"pointLight\", {\n    position: [10, 10, 10],\n    intensity: 0.5\n  }));\n};\n\nexport { GizmoViewcube };\n"]},"metadata":{},"sourceType":"module"}