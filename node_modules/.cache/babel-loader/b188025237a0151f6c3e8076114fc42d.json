{"ast":null,"code":"import { intersectTri } from './ThreeIntersectionUtilities.js';\nexport function intersectTris(mesh, geo, raycaster, ray, offset, count, intersections) {\n  for (var i = offset, end = offset + count; i < end; i++) {\n    intersectTri(mesh, geo, raycaster, ray, i, intersections);\n  }\n}\n;\nexport function intersectClosestTri(mesh, geo, raycaster, ray, offset, count) {\n  var dist = Infinity;\n  var res = null;\n\n  for (var i = offset, end = offset + count; i < end; i++) {\n    var intersection = intersectTri(mesh, geo, raycaster, ray, i);\n\n    if (intersection && intersection.distance < dist) {\n      res = intersection;\n      dist = intersection.distance;\n    }\n  }\n\n  return res;\n}\n;","map":{"version":3,"sources":["/Users/a2017/Documents/GitHub/react-3d-drag/node_modules/three-mesh-bvh/src/Utils/RayIntersectTriUtlities.js"],"names":["intersectTri","intersectTris","mesh","geo","raycaster","ray","offset","count","intersections","i","end","intersectClosestTri","dist","Infinity","res","intersection","distance"],"mappings":"AAAA,SAASA,YAAT,QAA6B,iCAA7B;AAEA,OAAO,SAASC,aAAT,CAAwBC,IAAxB,EAA8BC,GAA9B,EAAmCC,SAAnC,EAA8CC,GAA9C,EAAmDC,MAAnD,EAA2DC,KAA3D,EAAkEC,aAAlE,EAAkF;AAExF,OAAM,IAAIC,CAAC,GAAGH,MAAR,EAAgBI,GAAG,GAAGJ,MAAM,GAAGC,KAArC,EAA4CE,CAAC,GAAGC,GAAhD,EAAqDD,CAAC,EAAtD,EAA4D;AAE3DT,IAAAA,YAAY,CAAEE,IAAF,EAAQC,GAAR,EAAaC,SAAb,EAAwBC,GAAxB,EAA6BI,CAA7B,EAAgCD,aAAhC,CAAZ;AAEA;AAED;AAAA;AAED,OAAO,SAASG,mBAAT,CAA8BT,IAA9B,EAAoCC,GAApC,EAAyCC,SAAzC,EAAoDC,GAApD,EAAyDC,MAAzD,EAAiEC,KAAjE,EAAyE;AAE/E,MAAIK,IAAI,GAAGC,QAAX;AACA,MAAIC,GAAG,GAAG,IAAV;;AACA,OAAM,IAAIL,CAAC,GAAGH,MAAR,EAAgBI,GAAG,GAAGJ,MAAM,GAAGC,KAArC,EAA4CE,CAAC,GAAGC,GAAhD,EAAqDD,CAAC,EAAtD,EAA4D;AAE3D,QAAMM,YAAY,GAAGf,YAAY,CAAEE,IAAF,EAAQC,GAAR,EAAaC,SAAb,EAAwBC,GAAxB,EAA6BI,CAA7B,CAAjC;;AACA,QAAKM,YAAY,IAAIA,YAAY,CAACC,QAAb,GAAwBJ,IAA7C,EAAoD;AAEnDE,MAAAA,GAAG,GAAGC,YAAN;AACAH,MAAAA,IAAI,GAAGG,YAAY,CAACC,QAApB;AAEA;AAED;;AAED,SAAOF,GAAP;AAEA;AAAA","sourcesContent":["import { intersectTri } from './ThreeIntersectionUtilities.js';\r\n\r\nexport function intersectTris( mesh, geo, raycaster, ray, offset, count, intersections ) {\r\n\r\n\tfor ( let i = offset, end = offset + count; i < end; i ++ ) {\r\n\r\n\t\tintersectTri( mesh, geo, raycaster, ray, i, intersections );\r\n\r\n\t}\r\n\r\n};\r\n\r\nexport function intersectClosestTri( mesh, geo, raycaster, ray, offset, count ) {\r\n\r\n\tlet dist = Infinity;\r\n\tlet res = null;\r\n\tfor ( let i = offset, end = offset + count; i < end; i ++ ) {\r\n\r\n\t\tconst intersection = intersectTri( mesh, geo, raycaster, ray, i );\r\n\t\tif ( intersection && intersection.distance < dist ) {\r\n\r\n\t\t\tres = intersection;\r\n\t\t\tdist = intersection.distance;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn res;\r\n\r\n};\r\n"]},"metadata":{},"sourceType":"module"}