{"ast":null,"code":"import { DepthTexture, DepthFormat, UnsignedShortType } from 'three';\nimport * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { useFBO } from './useFBO.js';\nvar DepthBuffer = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 256 : _ref$size;\n  var dpr = useThree(function (state) {\n    return state.viewport.dpr;\n  });\n\n  var _useThree = useThree(function (state) {\n    return state.size;\n  }),\n      width = _useThree.width,\n      height = _useThree.height;\n\n  var w = size || width * dpr;\n  var h = size || height * dpr;\n  var depthConfig = React.useMemo(function () {\n    var depthTexture = new DepthTexture(w, h);\n    depthTexture.format = DepthFormat;\n    depthTexture.type = UnsignedShortType;\n    return {\n      depthTexture: depthTexture\n    };\n  }, [w, h]);\n  var depthFBO = useFBO(w, h, depthConfig);\n  React.useImperativeHandle(ref, function () {\n    return depthFBO == null ? void 0 : depthFBO.depthTexture;\n  });\n  return useFrame(function (state) {\n    state.gl.setRenderTarget(depthFBO);\n    state.gl.render(state.scene, state.camera);\n    state.gl.setRenderTarget(null);\n  });\n});\nexport { DepthBuffer };","map":{"version":3,"sources":["/Users/a2017/Documents/GitHub/react-3d-drag/node_modules/@react-three/drei/core/DepthBuffer.js"],"names":["DepthTexture","DepthFormat","UnsignedShortType","React","useThree","useFrame","useFBO","DepthBuffer","forwardRef","ref","size","dpr","state","viewport","width","height","w","h","depthConfig","useMemo","depthTexture","format","type","depthFBO","useImperativeHandle","gl","setRenderTarget","render","scene","camera"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,WAAvB,EAAoCC,iBAApC,QAA6D,OAA7D;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,oBAAnC;AACA,SAASC,MAAT,QAAuB,aAAvB;AAEA,IAAMC,WAAW,GAAG,aAAaJ,KAAK,CAACK,UAAN,CAAiB,gBAE/CC,GAF+C,EAEvC;AAAA,uBADTC,IACS;AAAA,MADTA,IACS,0BADF,GACE;AACT,MAAMC,GAAG,GAAGP,QAAQ,CAAC,UAAAQ,KAAK;AAAA,WAAIA,KAAK,CAACC,QAAN,CAAeF,GAAnB;AAAA,GAAN,CAApB;;AADS,kBAKLP,QAAQ,CAAC,UAAAQ,KAAK;AAAA,WAAIA,KAAK,CAACF,IAAV;AAAA,GAAN,CALH;AAAA,MAGPI,KAHO,aAGPA,KAHO;AAAA,MAIPC,MAJO,aAIPA,MAJO;;AAMT,MAAMC,CAAC,GAAGN,IAAI,IAAII,KAAK,GAAGH,GAA1B;AACA,MAAMM,CAAC,GAAGP,IAAI,IAAIK,MAAM,GAAGJ,GAA3B;AACA,MAAMO,WAAW,GAAGf,KAAK,CAACgB,OAAN,CAAc,YAAM;AACtC,QAAMC,YAAY,GAAG,IAAIpB,YAAJ,CAAiBgB,CAAjB,EAAoBC,CAApB,CAArB;AACAG,IAAAA,YAAY,CAACC,MAAb,GAAsBpB,WAAtB;AACAmB,IAAAA,YAAY,CAACE,IAAb,GAAoBpB,iBAApB;AACA,WAAO;AACLkB,MAAAA,YAAY,EAAZA;AADK,KAAP;AAGD,GAPmB,EAOjB,CAACJ,CAAD,EAAIC,CAAJ,CAPiB,CAApB;AAQA,MAAMM,QAAQ,GAAGjB,MAAM,CAACU,CAAD,EAAIC,CAAJ,EAAOC,WAAP,CAAvB;AACAf,EAAAA,KAAK,CAACqB,mBAAN,CAA0Bf,GAA1B,EAA+B;AAAA,WAAMc,QAAQ,IAAI,IAAZ,GAAmB,KAAK,CAAxB,GAA4BA,QAAQ,CAACH,YAA3C;AAAA,GAA/B;AACA,SAAOf,QAAQ,CAAC,UAAAO,KAAK,EAAI;AACvBA,IAAAA,KAAK,CAACa,EAAN,CAASC,eAAT,CAAyBH,QAAzB;AACAX,IAAAA,KAAK,CAACa,EAAN,CAASE,MAAT,CAAgBf,KAAK,CAACgB,KAAtB,EAA6BhB,KAAK,CAACiB,MAAnC;AACAjB,IAAAA,KAAK,CAACa,EAAN,CAASC,eAAT,CAAyB,IAAzB;AACD,GAJc,CAAf;AAKD,CAzBgC,CAAjC;AA2BA,SAASnB,WAAT","sourcesContent":["import { DepthTexture, DepthFormat, UnsignedShortType } from 'three';\nimport * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { useFBO } from './useFBO.js';\n\nconst DepthBuffer = /*#__PURE__*/React.forwardRef(({\n  size = 256\n}, ref) => {\n  const dpr = useThree(state => state.viewport.dpr);\n  const {\n    width,\n    height\n  } = useThree(state => state.size);\n  const w = size || width * dpr;\n  const h = size || height * dpr;\n  const depthConfig = React.useMemo(() => {\n    const depthTexture = new DepthTexture(w, h);\n    depthTexture.format = DepthFormat;\n    depthTexture.type = UnsignedShortType;\n    return {\n      depthTexture\n    };\n  }, [w, h]);\n  const depthFBO = useFBO(w, h, depthConfig);\n  React.useImperativeHandle(ref, () => depthFBO == null ? void 0 : depthFBO.depthTexture);\n  return useFrame(state => {\n    state.gl.setRenderTarget(depthFBO);\n    state.gl.render(state.scene, state.camera);\n    state.gl.setRenderTarget(null);\n  });\n});\n\nexport { DepthBuffer };\n"]},"metadata":{},"sourceType":"module"}