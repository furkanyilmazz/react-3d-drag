{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { OrbitControls as OrbitControls$1 } from 'three-stdlib';\nconst OrbitControls = /*#__PURE__*/React.forwardRef(({\n  camera,\n  regress,\n  domElement,\n  enableDamping = true,\n  ...restProps\n}, ref) => {\n  const invalidate = useThree(({\n    invalidate\n  }) => invalidate);\n  const defaultCamera = useThree(({\n    camera\n  }) => camera);\n  const gl = useThree(({\n    gl\n  }) => gl);\n  const performance = useThree(({\n    performance\n  }) => performance);\n  const explCamera = camera || defaultCamera;\n  const explDomElement = domElement || gl.domElement;\n  const controls = React.useMemo(() => new OrbitControls$1(explCamera), [explCamera]);\n  useFrame(() => {\n    if (controls.enabled) controls.update();\n  });\n  React.useEffect(() => {\n    const callback = () => {\n      invalidate();\n      if (regress) performance.regress();\n    };\n\n    controls.connect(explDomElement);\n    controls.addEventListener('change', callback);\n    return () => {\n      controls.removeEventListener('change', callback);\n      controls.dispose();\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [regress, controls, invalidate]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: ref,\n    object: controls,\n    enableDamping: enableDamping\n  }, restProps));\n});\nexport { OrbitControls };","map":{"version":3,"sources":["/Users/a2017/Documents/GitHub/react-3d-drag/node_modules/@react-three/drei/core/OrbitControls.js"],"names":["_extends","React","useThree","useFrame","OrbitControls","OrbitControls$1","forwardRef","camera","regress","domElement","enableDamping","restProps","ref","invalidate","defaultCamera","gl","performance","explCamera","explDomElement","controls","useMemo","enabled","update","useEffect","callback","connect","addEventListener","removeEventListener","dispose","createElement","object"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,oBAAnC;AACA,SAASC,aAAa,IAAIC,eAA1B,QAAiD,cAAjD;AAEA,MAAMD,aAAa,GAAG,aAAaH,KAAK,CAACK,UAAN,CAAiB,CAAC;AACnDC,EAAAA,MADmD;AAEnDC,EAAAA,OAFmD;AAGnDC,EAAAA,UAHmD;AAInDC,EAAAA,aAAa,GAAG,IAJmC;AAKnD,KAAGC;AALgD,CAAD,EAMjDC,GANiD,KAMzC;AACT,QAAMC,UAAU,GAAGX,QAAQ,CAAC,CAAC;AAC3BW,IAAAA;AAD2B,GAAD,KAEtBA,UAFqB,CAA3B;AAGA,QAAMC,aAAa,GAAGZ,QAAQ,CAAC,CAAC;AAC9BK,IAAAA;AAD8B,GAAD,KAEzBA,MAFwB,CAA9B;AAGA,QAAMQ,EAAE,GAAGb,QAAQ,CAAC,CAAC;AACnBa,IAAAA;AADmB,GAAD,KAEdA,EAFa,CAAnB;AAGA,QAAMC,WAAW,GAAGd,QAAQ,CAAC,CAAC;AAC5Bc,IAAAA;AAD4B,GAAD,KAEvBA,WAFsB,CAA5B;AAGA,QAAMC,UAAU,GAAGV,MAAM,IAAIO,aAA7B;AACA,QAAMI,cAAc,GAAGT,UAAU,IAAIM,EAAE,CAACN,UAAxC;AACA,QAAMU,QAAQ,GAAGlB,KAAK,CAACmB,OAAN,CAAc,MAAM,IAAIf,eAAJ,CAAoBY,UAApB,CAApB,EAAqD,CAACA,UAAD,CAArD,CAAjB;AACAd,EAAAA,QAAQ,CAAC,MAAM;AACb,QAAIgB,QAAQ,CAACE,OAAb,EAAsBF,QAAQ,CAACG,MAAT;AACvB,GAFO,CAAR;AAGArB,EAAAA,KAAK,CAACsB,SAAN,CAAgB,MAAM;AACpB,UAAMC,QAAQ,GAAG,MAAM;AACrBX,MAAAA,UAAU;AACV,UAAIL,OAAJ,EAAaQ,WAAW,CAACR,OAAZ;AACd,KAHD;;AAKAW,IAAAA,QAAQ,CAACM,OAAT,CAAiBP,cAAjB;AACAC,IAAAA,QAAQ,CAACO,gBAAT,CAA0B,QAA1B,EAAoCF,QAApC;AACA,WAAO,MAAM;AACXL,MAAAA,QAAQ,CAACQ,mBAAT,CAA6B,QAA7B,EAAuCH,QAAvC;AACAL,MAAAA,QAAQ,CAACS,OAAT;AACD,KAHD,CARoB,CAWjB;AACJ,GAZD,EAYG,CAACpB,OAAD,EAAUW,QAAV,EAAoBN,UAApB,CAZH;AAaA,SAAO,aAAaZ,KAAK,CAAC4B,aAAN,CAAoB,WAApB,EAAiC7B,QAAQ,CAAC;AAC5DY,IAAAA,GAAG,EAAEA,GADuD;AAE5DkB,IAAAA,MAAM,EAAEX,QAFoD;AAG5DT,IAAAA,aAAa,EAAEA;AAH6C,GAAD,EAI1DC,SAJ0D,CAAzC,CAApB;AAKD,CA3CkC,CAAnC;AA6CA,SAASP,aAAT","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { OrbitControls as OrbitControls$1 } from 'three-stdlib';\n\nconst OrbitControls = /*#__PURE__*/React.forwardRef(({\n  camera,\n  regress,\n  domElement,\n  enableDamping = true,\n  ...restProps\n}, ref) => {\n  const invalidate = useThree(({\n    invalidate\n  }) => invalidate);\n  const defaultCamera = useThree(({\n    camera\n  }) => camera);\n  const gl = useThree(({\n    gl\n  }) => gl);\n  const performance = useThree(({\n    performance\n  }) => performance);\n  const explCamera = camera || defaultCamera;\n  const explDomElement = domElement || gl.domElement;\n  const controls = React.useMemo(() => new OrbitControls$1(explCamera), [explCamera]);\n  useFrame(() => {\n    if (controls.enabled) controls.update();\n  });\n  React.useEffect(() => {\n    const callback = () => {\n      invalidate();\n      if (regress) performance.regress();\n    };\n\n    controls.connect(explDomElement);\n    controls.addEventListener('change', callback);\n    return () => {\n      controls.removeEventListener('change', callback);\n      controls.dispose();\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [regress, controls, invalidate]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: ref,\n    object: controls,\n    enableDamping: enableDamping\n  }, restProps));\n});\n\nexport { OrbitControls };\n"]},"metadata":{},"sourceType":"module"}