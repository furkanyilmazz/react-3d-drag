{"ast":null,"code":"import { setTriangle } from './TriangleUtils.js';\nexport function arrayToBox(nodeIndex32, array, target) {\n  target.min.x = array[nodeIndex32];\n  target.min.y = array[nodeIndex32 + 1];\n  target.min.z = array[nodeIndex32 + 2];\n  target.max.x = array[nodeIndex32 + 3];\n  target.max.y = array[nodeIndex32 + 4];\n  target.max.z = array[nodeIndex32 + 5];\n}\nexport function iterateOverTriangles(offset, count, geometry, intersectsTriangleFunc, contained, depth, triangle) {\n  var index = geometry.index;\n  var pos = geometry.attributes.position;\n\n  for (var i = offset, l = count + offset; i < l; i++) {\n    setTriangle(triangle, i * 3, index, pos);\n    triangle.needsUpdate = true;\n\n    if (intersectsTriangleFunc(triangle, i, contained, depth)) {\n      return true;\n    }\n  }\n\n  return false;\n}","map":{"version":3,"sources":["/Users/a2017/Documents/GitHub/react-3d-drag/node_modules/three-mesh-bvh/src/Utils/BufferNodeUtils.js"],"names":["setTriangle","arrayToBox","nodeIndex32","array","target","min","x","y","z","max","iterateOverTriangles","offset","count","geometry","intersectsTriangleFunc","contained","depth","triangle","index","pos","attributes","position","i","l","needsUpdate"],"mappings":"AAAA,SAASA,WAAT,QAA4B,oBAA5B;AAEA,OAAO,SAASC,UAAT,CAAqBC,WAArB,EAAkCC,KAAlC,EAAyCC,MAAzC,EAAkD;AAExDA,EAAAA,MAAM,CAACC,GAAP,CAAWC,CAAX,GAAeH,KAAK,CAAED,WAAF,CAApB;AACAE,EAAAA,MAAM,CAACC,GAAP,CAAWE,CAAX,GAAeJ,KAAK,CAAED,WAAW,GAAG,CAAhB,CAApB;AACAE,EAAAA,MAAM,CAACC,GAAP,CAAWG,CAAX,GAAeL,KAAK,CAAED,WAAW,GAAG,CAAhB,CAApB;AAEAE,EAAAA,MAAM,CAACK,GAAP,CAAWH,CAAX,GAAeH,KAAK,CAAED,WAAW,GAAG,CAAhB,CAApB;AACAE,EAAAA,MAAM,CAACK,GAAP,CAAWF,CAAX,GAAeJ,KAAK,CAAED,WAAW,GAAG,CAAhB,CAApB;AACAE,EAAAA,MAAM,CAACK,GAAP,CAAWD,CAAX,GAAeL,KAAK,CAAED,WAAW,GAAG,CAAhB,CAApB;AAEA;AAED,OAAO,SAASQ,oBAAT,CACNC,MADM,EAENC,KAFM,EAGNC,QAHM,EAINC,sBAJM,EAKNC,SALM,EAMNC,KANM,EAONC,QAPM,EAQL;AAED,MAAMC,KAAK,GAAGL,QAAQ,CAACK,KAAvB;AACA,MAAMC,GAAG,GAAGN,QAAQ,CAACO,UAAT,CAAoBC,QAAhC;;AACA,OAAM,IAAIC,CAAC,GAAGX,MAAR,EAAgBY,CAAC,GAAGX,KAAK,GAAGD,MAAlC,EAA0CW,CAAC,GAAGC,CAA9C,EAAiDD,CAAC,EAAlD,EAAwD;AAEvDtB,IAAAA,WAAW,CAAEiB,QAAF,EAAYK,CAAC,GAAG,CAAhB,EAAmBJ,KAAnB,EAA0BC,GAA1B,CAAX;AACAF,IAAAA,QAAQ,CAACO,WAAT,GAAuB,IAAvB;;AAEA,QAAKV,sBAAsB,CAAEG,QAAF,EAAYK,CAAZ,EAAeP,SAAf,EAA0BC,KAA1B,CAA3B,EAA+D;AAE9D,aAAO,IAAP;AAEA;AAED;;AAED,SAAO,KAAP;AAEA","sourcesContent":["import { setTriangle } from './TriangleUtils.js';\r\n\r\nexport function arrayToBox( nodeIndex32, array, target ) {\r\n\r\n\ttarget.min.x = array[ nodeIndex32 ];\r\n\ttarget.min.y = array[ nodeIndex32 + 1 ];\r\n\ttarget.min.z = array[ nodeIndex32 + 2 ];\r\n\r\n\ttarget.max.x = array[ nodeIndex32 + 3 ];\r\n\ttarget.max.y = array[ nodeIndex32 + 4 ];\r\n\ttarget.max.z = array[ nodeIndex32 + 5 ];\r\n\r\n}\r\n\r\nexport function iterateOverTriangles(\r\n\toffset,\r\n\tcount,\r\n\tgeometry,\r\n\tintersectsTriangleFunc,\r\n\tcontained,\r\n\tdepth,\r\n\ttriangle\r\n) {\r\n\r\n\tconst index = geometry.index;\r\n\tconst pos = geometry.attributes.position;\r\n\tfor ( let i = offset, l = count + offset; i < l; i ++ ) {\r\n\r\n\t\tsetTriangle( triangle, i * 3, index, pos );\r\n\t\ttriangle.needsUpdate = true;\r\n\r\n\t\tif ( intersectsTriangleFunc( triangle, i, contained, depth ) ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn false;\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}